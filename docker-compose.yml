version: '3.8'

services:
  # Service PHP-FPM
  php:
    build:
      context: .
      dockerfile: Dockerfile-php-fpm
    container_name: goldenaxe-php
    restart: unless-stopped
    volumes:
      - .:/var/www/html
    networks:
      - goldenaxe-network
    environment:
      - DB_HOST=db
      - DB_DATABASE=goldenaxe
      - DB_USERNAME=goldenaxe_user
      - DB_PASSWORD=goldenaxe_password
    depends_on:
      - db

  # Service Nginx
  nginx:
    image: nginx:alpine
    container_name: goldenaxe-nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - .:/var/www/html
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
    networks:
      - goldenaxe-network

  # Service Apache (alternative)
  apache:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: goldenaxe-apache
    restart: unless-stopped
    ports:
      - "8081:80"
    volumes:
      - .:/var/www/html
    depends_on:
      - db
    networks:
      - goldenaxe-network
    environment:
      - DB_HOST=db
      - DB_DATABASE=goldenaxe
      - DB_USERNAME=goldenaxe_user
      - DB_PASSWORD=goldenaxe_password

  # Service MySQL
  db:
    image: mysql:8.0
    container_name: goldenaxe-db
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_DATABASE: goldenaxe
      MYSQL_USER: goldenaxe_user
      MYSQL_PASSWORD: goldenaxe_password
      MYSQL_ROOT_PASSWORD: root_password
    volumes:
      - dbdata:/var/lib/mysql
      - ./database:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    networks:
      - goldenaxe-network

  # Service PHPMyAdmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: goldenaxe-pma
    restart: unless-stopped
    environment:
      PMA_HOST: db
      PMA_USER: root
      PMA_PASSWORD: root_password
      UPLOAD_LIMIT: 300M
    ports:
      - "8081:80"
    depends_on:
      - db
    networks:
      - goldenaxe-network

networks:
  goldenaxe-network:
    driver: bridge

volumes:
  dbdata:
    driver: local
