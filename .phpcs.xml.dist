<?xml version="1.0"?>
<ruleset name="GoldenAxe">
    <description>The coding standard for the GoldenAxe project.</description>

    <!-- Show progress -->
    <arg value="p"/>

    <!-- Show sniff and source of errors -->
    <arg name="report" value="full"/>

    <!-- Paths to check -->
    <file>app</file>
    <file>config</file>
    <file>database</file>
    <file>routes</file>
    <file>tests</file>

    <!-- Exclude paths -->
    <exclude-pattern>*/vendor/*</exclude-pattern>
    <exclude-pattern>*/node_modules/*</exclude-pattern>
    <exclude-pattern>*/storage/*</exclude-pattern>
    <exclude-pattern>*/bootstrap/cache/*</exclude-pattern>
    <exclude-pattern>*/public/*</exclude-pattern>

    <!-- Include the PSR-12 standard -->
    <rule ref="PSR12">
        <!-- Exclude PSR12.Files.ImportStatement.ImportSymbolSource rule -->
        <exclude name="PSR12.Files.ImportStatement.ImportSymbolSource"/>
        <!-- Exclude PSR12.Operators.OperatorSpacing.NoSpaceBefore rule -->
        <exclude name="PSR12.Operators.OperatorSpacing.NoSpaceBefore"/>
        <!-- Exclude PSR12.Operators.OperatorSpacing.NoSpaceAfter rule -->
        <exclude name="PSR12.Operators.OperatorSpacing.NoSpaceAfter"/>
        <!-- Exclude PSR12.Operators.OperatorSpacing.SpacingAfter error -->
        <exclude name="PSR12.Operators.OperatorSpacing.SpacingAfter"/>
        <!-- Exclude PSR12.Operators.OperatorSpacing.SpacingBefore error -->
        <exclude name="PSR12.Operators.OperatorSpacing.SpacingBefore"/>
    </rule>

    <!-- Configure PSR-12 rules -->
    <rule ref="PSR12.Classes.ClassInstantiation">
        <properties>
            <property name="spacingBeforeParentheses" value="1"/>
        </properties>
    </rule>

    <!-- Line length -->
    <rule ref="Generic.Files.LineLength">
        <properties>
            <property name="lineLimit" value="120"/>
            <property name="absoluteLineLimit" value="120"/>
        </properties>
    </rule>

    <!-- Force strict types -->
    <rule ref="SlevomatCodingStandard.TypeHints.DeclareStrictTypes">
        <properties>
            <property name="newlinesCountBetweenOpenTagAndDeclare" value="0"/>
            <property name="spacesCountAroundEqualsSign" value="0"/>
        </properties>
    </rule>

    <!-- Force consistent array syntax -->
    <rule ref="Generic.Arrays.DisallowLongArraySyntax"/>

    <!-- Force short array syntax -->
    <rule ref="Generic.PHP.DisallowShortOpenTag"/>
    <rule ref="Generic.PHP.DisallowShortOpenTag.EchoFound"/>

    <!-- Force strict comparison -->
    <rule ref="SlevomatCodingStandard.ControlStructures.RequireStrictComparison"/>

    <!-- Force consistent string quotes -->
    <rule ref="Squiz.Strings.DoubleQuoteUsage">
        <exclude-pattern>*Test.php</exclude-pattern>
    </rule>
    <rule ref="Squiz.Strings.DoubleQuoteUsage.ContainsVar">
        <severity>0</severity>
    </rule>

    <!-- Force consistent method chaining -->
    <rule ref="SlevomatCodingStandard.ControlStructures.RequireMultiLineCondition">
        <properties>
            <property name="minLineLength" value="80"/>
        </properties>
    </rule>

    <!-- Force consistent array alignment -->
    <rule ref="SlevomatCodingStandard.Arrays.TrailingArrayComma">
        <properties>
            <property name="enableAfterHeredoc" value="true"/>
        </properties>
    </rule>

    <!-- Force consistent method arguments formatting -->
    <rule ref="SlevomatCodingStandard.Functions.RequireMultiLineCall">
        <properties>
            <property name="minLineLength" value="80"/>
        </properties>
    </rule>

    <!-- Force consistent property and method order -->
    <rule ref="SlevomatCodingStandard.Classes.ClassConstantVisibility"/>
    <rule ref="SlevomatCodingStandard.Classes.DisallowLateStaticBindingForConstants"/>
    <rule ref="SlevomatCodingStandard.Classes.RequireAbstractOrFinal">
        <properties>
            <property name="exclude" type="array">
                <element value="*Controller"/>
            </property>
        </properties>
    </rule>

    <!-- Force consistent method and property naming -->
    <rule ref="SlevomatCodingStandard.NamingConventions.ValidVariableName">
        <properties>
            <property name="exclude" type="array">
                <element value="_*_*_*_"/>
            </property>
        </properties>
    </rule>

    <!-- Force consistent use statements -->
    <rule ref="SlevomatCodingStandard.Namespaces.AlphabeticallySortedUses"/>
    <rule ref="SlevomatCodingStandard.Namespaces.RequireOneNamespaceInFile"/>
    <rule ref="SlevomatCodingStandard.Namespaces.UseSpacing">
        <properties>
            <property name="linesCountAfterLastUse" value="1"/>
            <property name="linesCountBeforeFirstUse" value="1"/>
            <property name="linesCountBetweenUseTypes" value="1"/>
        </properties>
    </rule>

    <!-- Force consistent docblocks -->
    <rule ref="SlevomatCodingStandard.Commenting.DocCommentSpacing">
        <properties>
            <property name="linesCountBeforeFirstContent" value="0"/>
            <property name="linesCountBetweenDescriptionAndAnnotations" value="1"/>
            <property name="linesCountBetweenDifferentAnnotationsTypes" value="1"/>
            <property name="linesCountBetweenAnnotationsGroups" value="1"/>
            <property name="linesCountAfterLastContent" value="0"/>
            <property name="annotationsGroups" type="array">
                <element value="@param"/>
                <element value="@return"/>
                <element value="@throws"/>
                <element value="@deprecated"/>
                <element value="@see"/>
                <element value="@uses"/>
                <element value="@property"/>
                <element value="@method"/>
            </property>
        </properties>
    </rule>

    <!-- Force consistent type hints -->
    <rule ref="SlevomatCodingStandard.TypeHints.ParameterTypeHint">
        <properties>
            <property name="enableNativeTypeHint" value="true"/>
        </properties>
    </rule>
    <rule ref="SlevomatCodingStandard.TypeHints.ReturnTypeHint">
        <properties>
            <property name="enableVoidTypeHint" value="true"/>
            <property name="enableStaticTypeHint" value="true"/>
        </properties>
    </rule>

    <!-- Force consistent spacing -->
    <rule ref="SlevomatCodingStandard.WhiteSpace.OperatorSpacing">
        <properties>
            <property name="spacesCountAround" value="1"/>
        </properties>
    </rule>

    <!-- Force consistent array indentation -->
    <rule ref="SlevomatCodingStandard.Arrays.AlphabeticallySortedByKeys">
        <properties>
            <property name="sortAlphabetically" value="true"/>
        </properties>
    </rule>

    <!-- Force consistent class references -->
    <rule ref="SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly">
        <properties>
            <property name="searchAnnotations" value="true"/>
            <property name="allowFullyQualifiedNameForCollidingClasses" value="true"/>
            <property name="allowFullyQualifiedNameForCollidingFunctions" value="true"/>
            <property name="allowFullyQualifiedNameForCollidingConstants" value="true"/>
            <property name="allowFullyQualifiedGlobalClasses" value="false"/>
            <property name="allowFullyQualifiedGlobalFunctions" value="false"/>
            <property name="allowFullyQualifiedGlobalConstants" value="false"/>
            <property name="allowFallbackGlobalFunctions" value="true"/>
            <property name="allowFallbackGlobalConstants" value="true"/>
            <property name="allowFallbackGlobalClasses" value="true"/>
        </properties>
    </rule>

    <!-- Force consistent exception handling -->
    <rule ref="SlevomatCodingStandard.Exceptions.ReferenceThrowableOnly">
        <properties>
            <property name="allowCustomException" value="true"/>
        </properties>
    </rule>

    <!-- Ignore some rules for test files -->
    <rule ref="SlevomatCodingStandard.TypeHints.ParameterTypeHint">
        <exclude-pattern>*/tests/*</exclude-pattern>
    </rule>
    <rule ref="SlevomatCodingStandard.TypeHints.ReturnTypeHint">
        <exclude-pattern>*/tests/*</exclude-pattern>
    </rule>

</ruleset>
